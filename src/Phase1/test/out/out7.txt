FunctionDec : ackermann
ArgumentDec : a
ArgumentDec : b
Conditional : if
Operator : ==
Return
Operator : +
Conditional : if
Operator : ==
Return
Operator : -
Return
Operator : -
Operator : -
FunctionDec : is_inbound
ArgumentDec : x
ArgumentDec : y
ArgumentDec : sizex
ArgumentDec : sizey
Return
Operator : -
Operator : >
Operator : -
Operator : >
Operator : &
Operator : <
Operator : &
Operator : <
Operator : &
FunctionDec : count_neighbours
ArgumentDec : state
ArgumentDec : x
ArgumentDec : y
VarDec : ysize
Size
VarDec : xsize
Size
VarDec : result
VarDec : i
Operator : -
Loop : while
Operator : <
VarDec : j
Operator : -
Loop : while
Operator : <
Conditional : if
Operator : ==
Operator : ==
Operator : &
Operator : ~
Operator : +
Operator : +
Operator : &
Operator : +
Operator : +
Operator : &
Operator : +
Operator : +
Operator : +
Return
FunctionDec : next_state
ArgumentDec : prev
VarDec : sizey
Size
VarDec : sizex
Size
VarDec : next
VarDec : i
Loop : while
Operator : <
VarDec : line
VarDec : j
Loop : while
Operator : <
VarDec : n
Conditional : if
Conditional : if
Operator : <
Operator : >
Operator : |
Append
Conditional : else
Append
Conditional : else
Conditional : if
Operator : ==
Append
Conditional : else
Append
Operator : +
Append
Operator : +
Return
Main
Return
